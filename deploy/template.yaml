AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  API stack for working with LLM capabilities of Guardian.

  Guardian API

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 300
    MemorySize: 256
    Runtime: python3.11

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
#      AllowOrigin: "'*'"
      AllowOrigin: "'http://localhost:3000'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowCredentials: "'*'"

Resources:
  APIHandler:
    Type: AWS::Serverless::Function     # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      Handler: app.app
      CodeUri: ../server/
      Description: Main API entrypoint
      Architectures:
        - x86_64
#        - arm64

      Tracing: Active
      Events:
        CreateChatPath:
          Type: Api           # More info about API Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-api.html
          Properties:
            Path: /chats
            Method: POST
        SendMessagePath:
          Type: Api
          Properties:
            Path: /messages
            Method: POST
        ### temp endpoints to stub QuivrUI
        GetChatsPath:
          Type: Api
          Properties:
            Path: /chats
            Method: GET
        GetBrainsPath:
          Type: Api
          Properties:
            Path: /brains
            Method: GET
        GetDefaultBrainPath:
          Type: Api
          Properties:
            Path: /brains/default
            Method: GET
        GetOnboardingPath:
          Type: Api
          Properties:
            Path: /onboarding
            Method: GET
        GetPromptsPath:
          Type: Api
          Properties:
            Path: /prompts
            Method: GET
      # Powertools for AWS Lambda (Python) env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: APIHandler
          POWERTOOLS_METRICS_NAMESPACE: Powertools
          LOG_LEVEL: INFO
          JWT_SECRET_KEY:
          RESEND_API_KEY:
          SUPABASE_URL:
          SUPABASE_KEY:
          OPENAI_API_KEY:
          DATABASE_URI:
      Tags:
        LambdaPowertools: python
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  GuardianApi:
    Description: API Gateway endpoint URL for Prod environment for the Lambda Function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello"

  LambdaFunction:
    Description: API monolith Lambda Function ARN
    Value: !GetAtt APIHandler.Arn
